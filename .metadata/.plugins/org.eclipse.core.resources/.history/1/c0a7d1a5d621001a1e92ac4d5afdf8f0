package com.codeshare.springboot.microservice.example.apigateway.logging;

import java.io.BufferedWriter;
import java.io.IOException;
import java.nio.charset.Charset;
import java.nio.file.Paths;
import java.nio.file.StandardOpenOption;

import javax.servlet.http.HttpServletRequest;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Value;
import org.springframework.context.annotation.Profile;
import org.springframework.stereotype.Component;

import com.google.common.io.CharStreams;
import com.google.common.io.Files;
import com.netflix.zuul.ZuulFilter;
import com.netflix.zuul.context.RequestContext;
import com.netflix.zuul.http.HttpServletRequestWrapper;

@Component
@Profile("recording")
public class LogRequestFilter extends ZuulFilter {
    private static Logger log = LoggerFactory.getLogger(LogRequestFilter.class);
  
    @Override
    public String filterType() {
        return "pre";
    }
    @Override
    public int filterOrder() {
        return 2;
    }
    @Override
    public boolean shouldFilter() {
        return true;
    }
    @Override
    public Object run() {
        RequestContext ctx = RequestContext.getCurrentContext();
        HttpServletRequest request = new HttpServletRequestWrapper(ctx.getRequest());
        String requestData = null;
        try {
            if (request.getContentLength() > 0) {
                requestData = CharStreams.toString(request.getReader());
                log.info(requestData);
            }
        } catch (Exception e) {
            log.error("Error parsing request", e);
        }
       
        return null;
    }
}