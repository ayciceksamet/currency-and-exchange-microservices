package com.codeshare.springboot.microservice.example.conversion.controller;

import javax.servlet.http.HttpServletRequest;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RestController;

import com.codeshare.springboot.microservice.example.exchangerate.implemantation.IERRestService;
import com.codeshare.springboot.microservice.example.exchangerate.model.ERConvertionRateResponseModel;

public class CCController {


@RestController
public class ERController {
	
	@Autowired 
	ICCRestService execution;
	
	@RequestMapping(value = "/ping", method = RequestMethod.GET)
	public String getPing(){
		
		return "Hello world";
	}
	
	@RequestMapping(value = "/exchangerate/{amount}/{from}/{to}", method = RequestMethod.POST)
	public ResponseEntity<CCConvertionAmounResponseModel> getRate(@PathVariable String amount, @PathVariable String from, @PathVariable String to,
			HttpServletRequest request) {

		HttpStatus status = HttpStatus.OK;

		CCConvertionAmountResponseModel rm = execution.getCCAmount(currencypair);
		
		if(rm.getError()!=null && "400".equalsIgnoreCase(rm.getError().getCode())) {
			return new ResponseEntity<ERConvertionRateResponseModel>(rm, HttpStatus.BAD_REQUEST);
		}

		return new ResponseEntity<ERConvertionRateResponseModel>(rm, status);
	}

	
}
